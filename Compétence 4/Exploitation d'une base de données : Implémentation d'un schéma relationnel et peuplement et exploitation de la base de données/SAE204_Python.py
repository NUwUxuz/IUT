import numpy as np
import math
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score
 
 
def Moyenne(Serie):
    N=len(Serie)
    return sum(Serie)/N
 
def Variance(X):
    N=X.shape[0]
    Xm=sum(X)/N
    return sum((X-Xm)*(X-Xm))/N
 
def covar(Serie1, Serie2):
    moy1 = Moyenne(Serie1)
    moy2 = Moyenne(Serie2)
    total = 0
    for i in range (len(Serie1)):
        total += (Serie1[i] - moy1) * (Serie2[i] - moy2)
    return total / len(Serie1)
 
def correl(Serie1, Serie2):
    var1 = Variance(Serie1)
    var2 = Variance(Serie2)
    cov = covar(Serie1, Serie2)
    cor = cov / (math.sqrt(var1) * math.sqrt(var2))
    return cor
 
 
def Centreduire(tab):
    tab = np.array(tab,dtype=np.float64)     #Sur les version plus récente de numpy, il est nécessaire d'utiliser float64 au lieu de simplement float.
    (n,p)=tab.shape
    res = np.zeros((n,p))
    t_moy = np.mean(tab, axis=0)
    t_ecart = np.std(tab, axis=0)
    for j in range (p):
        res[:,j] = (tab[:,j] - t_moy[j])/t_ecart[j]
    return res
 
 
importation = pd.read_csv("Downloads/Colleges.csv")
importation = importation.dropna()
 
college = pd.DataFrame(data = importation)
college_np = college.to_numpy()
 
college_num = college_np[:,[2,3,4,5,6,7]]     #contient toutes les valeurs numériques
college_autre = college_np[:,[0,1]]           #contient le reste
 
 
college_cd = Centreduire(college_num)
 
 
 
def DiagBatons(Colonne):
    m = np.min(Colonne)
    M = np.max(Colonne)
    inter = np.linspace(m, M, 21)
    plt.figure()
    plt.hist(Colonne,inter,histtype="bar",align="left",rwidth=0.8)
 
 
 
DiagBatons(college_num[:,2])     #nombres d'élèves / valeurs 
 
DiagBatons(college_num[:,0])     #code académie
DiagBatons(college_num[:,1])     #code département
DiagBatons(college_num[:,3])     #latitude
DiagBatons(college_num[:,4])     #longitude
DiagBatons(college_num[:,5])     #ips
 
MatriceCov=np.cov(college_cd, rowvar=False)
 
print("Matrice de covariance:\n", MatriceCov)
 
X = Centreduire(college_num[:,[1,4,5]])
y = Centreduire(college_num[:,[2]])
 
regression = LinearRegression()
regression.fit(X, y)
 
coefficients = regression.coef_
 
print("Coefficient de régression:", coefficients)

y_prediction = regression.predict(X)
r2 = r2_score(y, y_prediction)
coefficients_multiple = np.sqrt(r2)
print(coefficients_multiple)


#Il n'y a pas de schéma car la régression linéaire a été fais sur VSCode, puisque Spyder refusait de faire fonctionné sklearn même si il a été installé proprement et de différente manière, désolé